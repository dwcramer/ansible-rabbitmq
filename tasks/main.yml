---
- name: 'Update APT'
  tags:
    - 'rabbitmq'
    - 'apt'
  sudo: 'yes'
  apt: update_cache=yes

- name: 'Ensure python-software-properties is installed'
  tags:
    - 'rabbitmq'
    - 'python'
  sudo: 'yes'
  apt: pkg=python-software-properties state=installed

- name: 'Add rabbitmq to APT repository'
  tags:
    - 'rabbitmq'
    - 'apt'
  sudo: 'yes'
  apt_repository: >
    repo='deb http://www.rabbitmq.com/debian/ testing main'
    state=present

- name: Check if rabbitmq service exists
  stat: path=/etc/init.d/rabbitmq-server
  register: rabbitmq_service

- name: Check whether /etc/rabbitmq/rabbitmq-env.conf contains "NODENAME={{rabbitmq_nodename}}"
  command: awk /^NODENAME={{rabbitmq_nodename}}$/ /etc/rabbitmq/rabbitmq-env.conf
  register: check_rabbitmq_conf
  changed_when: False
  failed_when: False
  when: rabbitmq_nodename is defined

- name: 'Stop rabbitmq'
  tags: 'rabbitmq'
  sudo: 'yes'
  service: >
    name=rabbitmq-server
    state=stopped
  when: rabbitmq_nodename is defined and rabbitmq_service.exists and not check_rabbitmq_conf.stdout |  match("NODENAME={{rabbitmq_nodename|default(None)}}")

- name: 'Set rabbitmq node name if provided'
  lineinfile: >
    dest=/etc/rabbitmq/rabbitmq-env.conf owner=root group=root mode=0644 line="NODENAME={{rabbitmq_nodename}}" create=yes
  when: rabbitmq_nodename is defined and not check_rabbitmq_conf.stdout |  match("NODENAME={{rabbitmq_nodename|default(None)}}")

- name: 'Start rabbitmq'
  tags: 'rabbitmq'
  sudo: 'yes'
  service: >
    name=rabbitmq-server
    state=started
  when: rabbitmq_nodename is defined and rabbitmq_service.exists and not check_rabbitmq_conf.stdout |  match("NODENAME={{rabbitmq_nodename|default(None)}}")

- name: 'Install rabbitmq'
  tags: 'rabbitmq'
  sudo: 'yes'
  apt: >
    pkg=rabbitmq-server state=installed
    force=yes

- name: 'Enable rabbitmq plugins'
  tags: 'rabbitmq'
  sudo: 'yes'
  rabbitmq_plugin: >
    names=rabbitmq_management,rabbitmq_tracing,rabbitmq_federation
    state=enabled
  register: enable_rabbitmq_plugins_result

  # MUST RESTART SERVER AFTER ENABLING PLUGINS
- name: 'Restart rabbitmq'
  tags: 'rabbitmq'
  sudo: 'yes'
  service: >
    name=rabbitmq-server
    state=restarted
  when: enable_rabbitmq_plugins_result.changed

- name: 'Add administrators'
  tags: 'rabbitmq'
  sudo: 'yes'
  rabbitmq_user: >
    user={{ item }}
    password={{rabbitmq_password}}
    tags=administrator,{{ item }}
    node={{rabbitmq_nodename|default(omit)}}
    vhost=/
    configure_priv=.*
    write_priv=.*
    read_priv=.*
    state=present
  with_items:
    - "{{ rabbitmq_user }}"

- name: 'Remove default guest user'
  tags: 'rabbitmq'
  sudo: 'yes'
  rabbitmq_user: >
    user=guest
    state=absent
    node={{rabbitmq_nodename|default(omit)}}
